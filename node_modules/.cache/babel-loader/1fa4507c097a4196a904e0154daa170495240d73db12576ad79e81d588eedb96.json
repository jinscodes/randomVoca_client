{"ast":null,"code":"var _jsxFileName = \"/Users/hanjinsung/Desktop/randomVoca_client/src/pages/Regist/Regist.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport st from \"./Regist.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Regist = () => {\n  _s();\n  const enInput = useRef(null);\n  const [wordArr, setWordArr] = useState([]);\n  const [word, setWord] = useState({\n    en: \"\",\n    ko: \"\"\n  });\n  const AddToList = newObj => {\n    var _enInput$current;\n    wordArr && setWordArr(prev => prev === null || prev === void 0 ? void 0 : prev.concat(newObj));\n    const enInputValue = (_enInput$current = enInput.current) === null || _enInput$current === void 0 ? void 0 : _enInput$current.value;\n  };\n\n  // const registVoca = async () => {\n  //   try {\n  //     await fetch(\"http://localhost:8000/regist\", {\n  //       method: \"POST\",\n  //       body: JSON.stringify({\n  //         id: \"id test\",\n  //         title: \"title test\",\n  //         chapter: \"chapter test\",\n  //       }),\n  //     });\n  //   } catch (error) {\n  //     console.log(error);\n  //     alert(\"Fail\");\n  //   }\n  // };\n\n  console.log(wordArr);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: st.regist_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: st.form_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: st.input_container,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"EN\",\n          ref: enInput,\n          onChange: event => {\n            const inputValue = event.currentTarget.value;\n            setWord(prev => ({\n              ...prev,\n              en: inputValue\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"KO\",\n          onChange: event => {\n            const inputValue = event.currentTarget.value;\n            setWord(prev => ({\n              ...prev,\n              ko: inputValue\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => AddToList(word),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Regist, \"IVjXiDsA0t/fqn6WxPuB5UnrVII=\");\n_c = Regist;\nexport default Regist;\nvar _c;\n$RefreshReg$(_c, \"Regist\");","map":{"version":3,"names":["useRef","useState","st","jsxDEV","_jsxDEV","Regist","_s","enInput","wordArr","setWordArr","word","setWord","en","ko","AddToList","newObj","_enInput$current","prev","concat","enInputValue","current","value","console","log","className","regist_container","children","form_container","input_container","type","placeholder","ref","onChange","event","inputValue","currentTarget","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/hanjinsung/Desktop/randomVoca_client/src/pages/Regist/Regist.tsx"],"sourcesContent":["import { ChangeEvent, useRef, useState } from \"react\";\nimport st from \"./Regist.module.scss\";\n\ninterface AddToList {\n  en?: string;\n  ko?: string;\n}\n\nconst Regist = () => {\n  const enInput = useRef<HTMLInputElement>(null);\n  const [wordArr, setWordArr] = useState<AddToList[]>([]);\n  const [word, setWord] = useState<AddToList>({\n    en: \"\",\n    ko: \"\",\n  });\n\n  const AddToList = (newObj: AddToList) => {\n    wordArr && setWordArr((prev) => prev?.concat(newObj));\n    const enInputValue = enInput.current?.value;\n  };\n\n  // const registVoca = async () => {\n  //   try {\n  //     await fetch(\"http://localhost:8000/regist\", {\n  //       method: \"POST\",\n  //       body: JSON.stringify({\n  //         id: \"id test\",\n  //         title: \"title test\",\n  //         chapter: \"chapter test\",\n  //       }),\n  //     });\n  //   } catch (error) {\n  //     console.log(error);\n  //     alert(\"Fail\");\n  //   }\n  // };\n\n  console.log(wordArr);\n\n  return (\n    <section className={st.regist_container}>\n      <div className={st.form_container}>\n        <div className={st.input_container}>\n          <input\n            type=\"text\"\n            placeholder=\"EN\"\n            ref={enInput}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              const inputValue = event.currentTarget.value;\n              setWord((prev) => ({\n                ...prev,\n                en: inputValue,\n              }));\n            }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"KO\"\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              const inputValue = event.currentTarget.value;\n              setWord((prev) => ({\n                ...prev,\n                ko: inputValue,\n              }));\n            }}\n          />\n        </div>\n        <button onClick={() => AddToList(word)}>Add</button>\n      </div>\n      <table>\n        <th>\n          <td></td>\n          <td></td>\n        </th>\n        <tr>\n          <td></td>\n          <td></td>\n        </tr>\n      </table>\n      <button>Submit</button>\n    </section>\n  );\n};\n\nexport default Regist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/hanjinsung/Desktop/randomVoca_client/src/pages/Regist/RegistWords/RegistWords.tsx\",\n  _s = $RefreshSig$();\nimport LeftArrow from \"assets/svg/Left_arrow.svg\";\nimport Remove from \"assets/svg/Remove.svg\";\nimport { useState } from \"react\";\nimport { useRegistContext } from \"context/RegistContext\";\nimport st from \"./RegistWords.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistWords = ({\n  setPage\n}) => {\n  _s();\n  const {\n    registValue,\n    setRegistValue\n  } = useRegistContext();\n  const [wordArr, setWordArr] = useState([]);\n  const [word, setWord] = useState({\n    en: \"\",\n    ko: \"\"\n  });\n  const arrowClick = () => {\n    setPage(\"regist/title\");\n  };\n  const rmClick = ko => {\n    setWordArr(prev => prev.filter(word => word.ko !== ko));\n  };\n  const clickNextBtn = () => {\n    setPage(\"regist/final\");\n  };\n  const AddToList = newObj => {\n    if (word.en !== \"\" && word.ko !== \"\") {\n      wordArr && setWordArr(prev => prev === null || prev === void 0 ? void 0 : prev.concat(newObj));\n      setWord({\n        en: \"\",\n        ko: \"\"\n      });\n    } else {\n      alert(\"There is a empty place\");\n    }\n  };\n\n  // const preventClose = (e: BeforeUnloadEvent) => {\n  //   e.preventDefault();\n  //   e.returnValue = \"\";\n  // };\n\n  // useEffect(() => {\n  //   (() => {\n  //     window.addEventListener(\"beforeunload\", preventClose);\n  //   })();\n  //   return () => {\n  //     window.removeEventListener(\"beforeunload\", preventClose);\n  //   };\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: st.regist_container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: LeftArrow,\n      alt: \"left_arrow\",\n      className: st.arrow,\n      onClick: () => arrowClick()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: st.form_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: st.input_container,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"EN\",\n          value: word.en,\n          onChange: event => {\n            const inputValue = event.currentTarget.value;\n            setWord(prev => ({\n              ...prev,\n              en: inputValue\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"KO\",\n          value: word.ko,\n          onChange: event => {\n            const inputValue = event.currentTarget.value;\n            setWord(prev => ({\n              ...prev,\n              ko: inputValue\n            }));\n          },\n          onKeyDown: e => {\n            e.key === \"Enter\" && AddToList(word);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => AddToList(word),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: wordArr.map(el => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: el.en\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: wordArr.map(el => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [el.ko, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Remove,\n            alt: \"remove\",\n            className: st.rm_svg,\n            onClick: () => rmClick(el.ko)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: st.submit_btn,\n      onClick: () => clickNextBtn(),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistWords, \"ZI+6E9kE7x/CJrFTJ4CE6inbSGA=\", false, function () {\n  return [useRegistContext];\n});\n_c = RegistWords;\nexport default RegistWords;\nvar _c;\n$RefreshReg$(_c, \"RegistWords\");","map":{"version":3,"names":["LeftArrow","Remove","useState","useRegistContext","st","jsxDEV","_jsxDEV","RegistWords","setPage","_s","registValue","setRegistValue","wordArr","setWordArr","word","setWord","en","ko","arrowClick","rmClick","prev","filter","clickNextBtn","AddToList","newObj","concat","alert","className","regist_container","children","src","alt","arrow","onClick","fileName","_jsxFileName","lineNumber","columnNumber","form_container","input_container","type","placeholder","value","onChange","event","inputValue","currentTarget","onKeyDown","e","key","map","el","rm_svg","submit_btn","_c","$RefreshReg$"],"sources":["/Users/hanjinsung/Desktop/randomVoca_client/src/pages/Regist/RegistWords/RegistWords.tsx"],"sourcesContent":["import LeftArrow from \"assets/svg/Left_arrow.svg\";\nimport Remove from \"assets/svg/Remove.svg\";\nimport { ChangeEvent, Dispatch, SetStateAction, useState } from \"react\";\n\nimport { useRegistContext } from \"context/RegistContext\";\nimport st from \"./RegistWords.module.scss\";\n\ninterface Props {\n  setPage: Dispatch<SetStateAction<string>>;\n}\n\ninterface AddToList {\n  en: string | undefined;\n  ko: string | undefined;\n}\n\nconst RegistWords = ({ setPage }: Props) => {\n  const { registValue, setRegistValue } = useRegistContext();\n  const [wordArr, setWordArr] = useState<AddToList[]>([]);\n  const [word, setWord] = useState<AddToList>({\n    en: \"\",\n    ko: \"\",\n  });\n\n  const arrowClick = () => {\n    setPage(\"regist/title\");\n  };\n\n  const rmClick = (ko: string | undefined) => {\n    setWordArr((prev) => prev.filter((word) => word.ko !== ko));\n  };\n\n  const clickNextBtn = () => {\n    setPage(\"regist/final\");\n  };\n\n  const AddToList = (newObj: AddToList) => {\n    if (word.en !== \"\" && word.ko !== \"\") {\n      wordArr && setWordArr((prev) => prev?.concat(newObj));\n      setWord({\n        en: \"\",\n        ko: \"\",\n      });\n    } else {\n      alert(\"There is a empty place\");\n    }\n  };\n\n  // const preventClose = (e: BeforeUnloadEvent) => {\n  //   e.preventDefault();\n  //   e.returnValue = \"\";\n  // };\n\n  // useEffect(() => {\n  //   (() => {\n  //     window.addEventListener(\"beforeunload\", preventClose);\n  //   })();\n  //   return () => {\n  //     window.removeEventListener(\"beforeunload\", preventClose);\n  //   };\n  // }, []);\n\n  return (\n    <section className={st.regist_container}>\n      <img\n        src={LeftArrow}\n        alt=\"left_arrow\"\n        className={st.arrow}\n        onClick={() => arrowClick()}\n      />\n      <div className={st.form_container}>\n        <div className={st.input_container}>\n          <input\n            type=\"text\"\n            placeholder=\"EN\"\n            value={word.en}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              const inputValue = event.currentTarget.value;\n              setWord((prev: AddToList) => ({\n                ...prev,\n                en: inputValue,\n              }));\n            }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"KO\"\n            value={word.ko}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              const inputValue = event.currentTarget.value;\n              setWord((prev) => ({\n                ...prev,\n                ko: inputValue,\n              }));\n            }}\n            onKeyDown={(e) => {\n              e.key === \"Enter\" && AddToList(word);\n            }}\n          />\n        </div>\n        <button onClick={() => AddToList(word)}>Add</button>\n      </div>\n      <table>\n        <th>\n          {wordArr.map((el) => (\n            <td>{el.en}</td>\n          ))}\n        </th>\n        <tr>\n          {wordArr.map((el) => (\n            <td>\n              {el.ko}\n              <img\n                src={Remove}\n                alt=\"remove\"\n                className={st.rm_svg}\n                onClick={() => rmClick(el.ko)}\n              />\n            </td>\n          ))}\n        </tr>\n      </table>\n      <button className={st.submit_btn} onClick={() => clickNextBtn()}>\n        Next\n      </button>\n    </section>\n  );\n};\n\nexport default RegistWords;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/hanjinsung/Desktop/randomVoca_client/src/components/Login/Login.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { Link } from \"react-router-dom\";\nimport st from \"./Login.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [id, setId] = useState();\n  const [pw, setPw] = useState();\n  const [cookies, setCookies] = useCookies([\"login\"]);\n  const postLogin = async () => {\n    await axios.post(\"http://localhost:8080/login\", {\n      id: id,\n      pw: pw\n    }).then(res => {\n      if (res.status === 200) return setCookies(\"login\", res.data.token, {\n        maxAge: 60 * 60 * 24\n      });\n      return alert(\"아이디 또는 비밀번호가 잘못되었습니다. 다시 입력해주세요\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: st.login,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      acceptCharset: \"utf-8\",\n      method: \"POST\",\n      name: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ID\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"id\",\n          onChange: e => setId(e.target.value),\n          placeholder: \"ID\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"PW\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"pw\",\n          onChange: e => setPw(e.target.value),\n          placeholder: \"PW\",\n          type: \"password\",\n          onKeyDown: e => {\n            e.key === \"Enter\" && postLogin();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        className: st.signup,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => postLogin(),\n        type: \"button\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"gVcUy7+PJYKBmCu01NJshNAYjGI=\", false, function () {\n  return [useCookies];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","useState","useCookies","Link","st","jsxDEV","_jsxDEV","Login","_s","id","setId","pw","setPw","cookies","setCookies","postLogin","post","then","res","status","data","token","maxAge","alert","catch","err","console","log","className","login","children","fileName","_jsxFileName","lineNumber","columnNumber","acceptCharset","method","name","onChange","e","target","value","placeholder","type","onKeyDown","key","to","signup","onClick","_c","$RefreshReg$"],"sources":["/Users/hanjinsung/Desktop/randomVoca_client/src/components/Login/Login.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { Link } from \"react-router-dom\";\nimport st from \"./Login.module.scss\";\n\nconst Login = () => {\n  const [id, setId] = useState<string>();\n  const [pw, setPw] = useState<string>();\n  const [cookies, setCookies] = useCookies([\"login\"]);\n\n  const postLogin = async () => {\n    await axios\n      .post(\"http://localhost:8080/login\", {\n        id: id,\n        pw: pw,\n      })\n      .then((res) => {\n        if (res.status === 200)\n          return setCookies(\"login\", res.data.token, {\n            maxAge: 60 * 60 * 24,\n          });\n        return alert(\n          \"아이디 또는 비밀번호가 잘못되었습니다. 다시 입력해주세요\"\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <section className={st.login}>\n      <div>Login</div>\n      <form acceptCharset=\"utf-8\" method=\"POST\" name=\"form\">\n        <label>\n          ID\n          <input\n            name=\"id\"\n            onChange={(e) => setId(e.target.value)}\n            placeholder=\"ID\"\n            type=\"text\"\n          />\n        </label>\n        <label>\n          PW\n          <input\n            name=\"pw\"\n            onChange={(e) => setPw(e.target.value)}\n            placeholder=\"PW\"\n            type=\"password\"\n            onKeyDown={(e) => {\n              e.key === \"Enter\" && postLogin();\n            }}\n          />\n        </label>\n\n        <Link to=\"/signup\" className={st.signup}>\n          Sign Up\n        </Link>\n\n        <button onClick={() => postLogin()} type=\"button\">\n          SUBMIT\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
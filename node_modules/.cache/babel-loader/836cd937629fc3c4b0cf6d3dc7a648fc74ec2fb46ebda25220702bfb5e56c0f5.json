{"ast":null,"code":"var _jsxFileName = \"/Users/hanjinsung/Desktop/randomVoca_client/src/pages/Regist/RegistWords/RegistWords.tsx\",\n  _s2 = $RefreshSig$();\nimport LeftArrow from \"assets/svg/Left_arrow.svg\";\nimport Remove from \"assets/svg/Remove.svg\";\nimport { useEffect, useState } from \"react\";\nimport { useRegistContext } from \"context/RegistContext\";\nimport { useCreateRandom } from \"hooks/useCreateRandom\";\nimport st from \"./RegistWords.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistWords = ({\n  setPage\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    registValue,\n    setRegistValue\n  } = useRegistContext();\n  const [word, setWord] = useState({\n    en: \"\",\n    ko: \"\",\n    id: \"\"\n  });\n  const arrowClick = () => {\n    setPage(\"regist/title\");\n  };\n  const rmClick = id => {\n    setRegistValue(prev => ({\n      ...prev,\n      wordArr: prev.wordArr.filter(word => word.id !== id)\n    }));\n  };\n  const clickNextBtn = () => {\n    setPage(\"regist/final\");\n  };\n  const AddToList = newObj => {\n    _s();\n    const randomId = useCreateRandom();\n    if (word.en !== \"\" && word.ko !== \"\") {\n      setRegistValue(prev => ({\n        ...prev,\n        wordArr: [...prev.wordArr, {\n          en: newObj.en,\n          ko: newObj.ko,\n          id: randomId\n        }]\n      }));\n      setWord({\n        en: \"\",\n        ko: \"\"\n      });\n    } else {\n      alert(\"There is a empty place\");\n    }\n  };\n  _s(AddToList, \"qZn4pWLIfIgaZqYmfa6GLssSTL8=\", false, function () {\n    return [useCreateRandom];\n  });\n  const preventClose = e => {\n    e.preventDefault();\n    e.returnValue = \"\";\n  };\n  useEffect(() => {\n    (() => {\n      window.addEventListener(\"beforeunload\", preventClose);\n    })();\n    return () => {\n      window.removeEventListener(\"beforeunload\", preventClose);\n    };\n  }, []);\n  console.log(\"word: \", registValue);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: st.regist_container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: LeftArrow,\n      alt: \"left_arrow\",\n      className: st.arrow,\n      onClick: () => arrowClick()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: st.form_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: st.input_container,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"EN\",\n          value: word.en,\n          onChange: event => {\n            const inputValue = event.currentTarget.value;\n            setWord(prev => ({\n              ...prev,\n              en: inputValue\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"KO\",\n          value: word.ko,\n          onChange: event => {\n            const inputValue = event.currentTarget.value;\n            setWord(prev => ({\n              ...prev,\n              ko: inputValue\n            }));\n          },\n          onKeyDown: e => {\n            e.key === \"Enter\" && AddToList(word);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => AddToList(word),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: registValue.wordArr && registValue.wordArr.map(el => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: el.en\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: registValue.wordArr && registValue.wordArr.map(el => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [el.ko, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Remove,\n            alt: \"remove\",\n            className: st.rm_svg,\n            onClick: () => rmClick(el.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: st.submit_btn,\n      onClick: () => clickNextBtn(),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s2(RegistWords, \"3EbDfaR0ULCoCmL9aoEIMR+cSEg=\", false, function () {\n  return [useRegistContext];\n});\n_c = RegistWords;\nexport default RegistWords;\nvar _c;\n$RefreshReg$(_c, \"RegistWords\");","map":{"version":3,"names":["LeftArrow","Remove","useEffect","useState","useRegistContext","useCreateRandom","st","jsxDEV","_jsxDEV","RegistWords","setPage","_s2","_s","$RefreshSig$","registValue","setRegistValue","word","setWord","en","ko","id","arrowClick","rmClick","prev","wordArr","filter","clickNextBtn","AddToList","newObj","randomId","alert","preventClose","e","preventDefault","returnValue","window","addEventListener","removeEventListener","console","log","className","regist_container","children","src","alt","arrow","onClick","fileName","_jsxFileName","lineNumber","columnNumber","form_container","input_container","type","placeholder","value","onChange","event","inputValue","currentTarget","onKeyDown","key","map","el","rm_svg","submit_btn","_c","$RefreshReg$"],"sources":["/Users/hanjinsung/Desktop/randomVoca_client/src/pages/Regist/RegistWords/RegistWords.tsx"],"sourcesContent":["import LeftArrow from \"assets/svg/Left_arrow.svg\";\nimport Remove from \"assets/svg/Remove.svg\";\nimport {\n  ChangeEvent,\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { useRegistContext } from \"context/RegistContext\";\nimport { useCreateRandom } from \"hooks/useCreateRandom\";\nimport { AddToList, RegistValue } from \"types/types\";\nimport st from \"./RegistWords.module.scss\";\n\ninterface Props {\n  setPage: Dispatch<SetStateAction<string>>;\n}\n\nconst RegistWords = ({ setPage }: Props) => {\n  const { registValue, setRegistValue } = useRegistContext();\n  const [word, setWord] = useState<AddToList>({\n    en: \"\",\n    ko: \"\",\n    id: \"\",\n  });\n\n  const arrowClick = () => {\n    setPage(\"regist/title\");\n  };\n\n  const rmClick = (id: string | undefined) => {\n    setRegistValue((prev: RegistValue) => ({\n      ...prev,\n      wordArr: prev.wordArr.filter((word) => word.id !== id),\n    }));\n  };\n\n  const clickNextBtn = () => {\n    setPage(\"regist/final\");\n  };\n\n  const AddToList = (newObj: AddToList) => {\n    const randomId = useCreateRandom();\n\n    if (word.en !== \"\" && word.ko !== \"\") {\n      setRegistValue((prev: RegistValue) => ({\n        ...prev,\n        wordArr: [\n          ...prev.wordArr,\n          {\n            en: newObj.en,\n            ko: newObj.ko,\n            id: randomId,\n          },\n        ],\n      }));\n      setWord({\n        en: \"\",\n        ko: \"\",\n      });\n    } else {\n      alert(\"There is a empty place\");\n    }\n  };\n\n  const preventClose = (e: BeforeUnloadEvent) => {\n    e.preventDefault();\n    e.returnValue = \"\";\n  };\n\n  useEffect(() => {\n    (() => {\n      window.addEventListener(\"beforeunload\", preventClose);\n    })();\n    return () => {\n      window.removeEventListener(\"beforeunload\", preventClose);\n    };\n  }, []);\n\n  console.log(\"word: \", registValue);\n\n  return (\n    <section className={st.regist_container}>\n      <img\n        src={LeftArrow}\n        alt=\"left_arrow\"\n        className={st.arrow}\n        onClick={() => arrowClick()}\n      />\n      <div className={st.form_container}>\n        <div className={st.input_container}>\n          <input\n            type=\"text\"\n            placeholder=\"EN\"\n            value={word.en}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              const inputValue = event.currentTarget.value;\n              setWord((prev: AddToList) => ({\n                ...prev,\n                en: inputValue,\n              }));\n            }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"KO\"\n            value={word.ko}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              const inputValue = event.currentTarget.value;\n\n              setWord((prev) => ({\n                ...prev,\n                ko: inputValue,\n              }));\n            }}\n            onKeyDown={(e) => {\n              e.key === \"Enter\" && AddToList(word);\n            }}\n          />\n        </div>\n        <button onClick={() => AddToList(word)}>Add</button>\n      </div>\n      <table>\n        <th>\n          {registValue.wordArr &&\n            registValue.wordArr.map((el) => <td>{el.en}</td>)}\n        </th>\n        <tr>\n          {registValue.wordArr &&\n            registValue.wordArr.map((el) => (\n              <td>\n                {el.ko}\n                <img\n                  src={Remove}\n                  alt=\"remove\"\n                  className={st.rm_svg}\n                  onClick={() => rmClick(el.id)}\n                />\n              </td>\n            ))}\n        </tr>\n      </table>\n      <button className={st.submit_btn} onClick={() => clickNextBtn()}>\n        Next\n      </button>\n    </section>\n  );\n};\n\nexport default RegistWords;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
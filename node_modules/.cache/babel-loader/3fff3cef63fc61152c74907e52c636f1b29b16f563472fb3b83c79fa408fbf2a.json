{"ast":null,"code":"var _jsxFileName = \"/Users/hanjinsung/Desktop/randomVoca_client/src/pages/Regist/RegistWords/RegistWords.tsx\",\n  _s = $RefreshSig$();\nimport LeftArrow from \"assets/svg/Left_arrow.svg\";\nimport Remove from \"assets/svg/Remove.svg\";\nimport { useState } from \"react\";\nimport { useRegistContext } from \"context/RegistContext\";\nimport st from \"./RegistWords.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistWords = ({\n  setPage\n}) => {\n  _s();\n  let today = new Date();\n  let year = today.getFullYear();\n  let month = today.getMonth();\n  let date = today.getDate();\n  let hours = today.getHours();\n  let minutes = today.getMinutes();\n  let milliseconds = today.getMilliseconds();\n  const randomNumber = Math.random();\n  console.log(`${year} ${month} ${date} ${hours} ${minutes} ${milliseconds}`);\n  console.log(randomNumber);\n  const {\n    registValue,\n    setRegistValue\n  } = useRegistContext();\n  const [word, setWord] = useState({\n    en: \"\",\n    ko: \"\",\n    id: \"\"\n  });\n  const arrowClick = () => {\n    setPage(\"regist/title\");\n  };\n  const rmClick = ko => {\n    setRegistValue(prev => ({\n      ...prev,\n      wordArr: prev.wordArr.filter(word => word.ko !== ko)\n    }));\n  };\n  const clickNextBtn = () => {\n    setPage(\"regist/final\");\n  };\n  const AddToList = newObj => {\n    if (word.en !== \"\" && word.ko !== \"\") {\n      registValue && setRegistValue(prev => ({\n        ...prev,\n        wordArr: prev.wordArr.concat(newObj)\n      }));\n      setWord({\n        en: \"\",\n        ko: \"\"\n      });\n    } else {\n      alert(\"There is a empty place\");\n    }\n  };\n\n  // const preventClose = (e: BeforeUnloadEvent) => {\n  //   e.preventDefault();\n  //   e.returnValue = \"\";\n  // };\n\n  // useEffect(() => {\n  //   (() => {\n  //     window.addEventListener(\"beforeunload\", preventClose);\n  //   })();\n  //   return () => {\n  //     window.removeEventListener(\"beforeunload\", preventClose);\n  //   };\n  // }, []);\n\n  // console.log(\"word: \", registValue);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: st.regist_container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: LeftArrow,\n      alt: \"left_arrow\",\n      className: st.arrow,\n      onClick: () => arrowClick()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: st.form_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: st.input_container,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"EN\",\n          value: word.en,\n          onChange: event => {\n            const inputValue = event.currentTarget.value;\n            setWord(prev => ({\n              ...prev,\n              en: inputValue\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"KO\",\n          value: word.ko,\n          onChange: event => {\n            const inputValue = event.currentTarget.value;\n            setWord(prev => ({\n              ...prev,\n              ko: inputValue\n            }));\n          },\n          onKeyDown: e => {\n            e.key === \"Enter\" && AddToList(word);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => AddToList(word),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: registValue.wordArr && registValue.wordArr.map(el => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: el.en\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: registValue.wordArr && registValue.wordArr.map(el => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [el.ko, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Remove,\n            alt: \"remove\",\n            className: st.rm_svg,\n            onClick: () => rmClick(el.ko)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: st.submit_btn,\n      onClick: () => clickNextBtn(),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistWords, \"zBjUaCl4YNgNWHWVghhn5se7org=\", false, function () {\n  return [useRegistContext];\n});\n_c = RegistWords;\nexport default RegistWords;\nvar _c;\n$RefreshReg$(_c, \"RegistWords\");","map":{"version":3,"names":["LeftArrow","Remove","useState","useRegistContext","st","jsxDEV","_jsxDEV","RegistWords","setPage","_s","today","Date","year","getFullYear","month","getMonth","date","getDate","hours","getHours","minutes","getMinutes","milliseconds","getMilliseconds","randomNumber","Math","random","console","log","registValue","setRegistValue","word","setWord","en","ko","id","arrowClick","rmClick","prev","wordArr","filter","clickNextBtn","AddToList","newObj","concat","alert","className","regist_container","children","src","alt","arrow","onClick","fileName","_jsxFileName","lineNumber","columnNumber","form_container","input_container","type","placeholder","value","onChange","event","inputValue","currentTarget","onKeyDown","e","key","map","el","rm_svg","submit_btn","_c","$RefreshReg$"],"sources":["/Users/hanjinsung/Desktop/randomVoca_client/src/pages/Regist/RegistWords/RegistWords.tsx"],"sourcesContent":["import LeftArrow from \"assets/svg/Left_arrow.svg\";\nimport Remove from \"assets/svg/Remove.svg\";\nimport { ChangeEvent, Dispatch, SetStateAction, useState } from \"react\";\n\nimport { useRegistContext } from \"context/RegistContext\";\nimport { AddToList, RegistValue } from \"types/types\";\nimport st from \"./RegistWords.module.scss\";\n\ninterface Props {\n  setPage: Dispatch<SetStateAction<string>>;\n}\n\nconst RegistWords = ({ setPage }: Props) => {\n  let today = new Date();\n  let year = today.getFullYear();\n  let month = today.getMonth();\n  let date = today.getDate();\n  let hours = today.getHours();\n  let minutes = today.getMinutes();\n  let milliseconds = today.getMilliseconds();\n\n  const randomNumber = Math.random();\n  console.log(`${year} ${month} ${date} ${hours} ${minutes} ${milliseconds}`);\n  console.log(randomNumber);\n\n  const { registValue, setRegistValue } = useRegistContext();\n  const [word, setWord] = useState<AddToList>({\n    en: \"\",\n    ko: \"\",\n    id: \"\",\n  });\n\n  const arrowClick = () => {\n    setPage(\"regist/title\");\n  };\n\n  const rmClick = (ko: string | undefined) => {\n    setRegistValue((prev: RegistValue) => ({\n      ...prev,\n      wordArr: prev.wordArr.filter((word) => word.ko !== ko),\n    }));\n  };\n\n  const clickNextBtn = () => {\n    setPage(\"regist/final\");\n  };\n\n  const AddToList = (newObj: AddToList) => {\n    if (word.en !== \"\" && word.ko !== \"\") {\n      registValue &&\n        setRegistValue((prev: RegistValue) => ({\n          ...prev,\n          wordArr: prev.wordArr.concat(newObj),\n        }));\n      setWord({\n        en: \"\",\n        ko: \"\",\n      });\n    } else {\n      alert(\"There is a empty place\");\n    }\n  };\n\n  // const preventClose = (e: BeforeUnloadEvent) => {\n  //   e.preventDefault();\n  //   e.returnValue = \"\";\n  // };\n\n  // useEffect(() => {\n  //   (() => {\n  //     window.addEventListener(\"beforeunload\", preventClose);\n  //   })();\n  //   return () => {\n  //     window.removeEventListener(\"beforeunload\", preventClose);\n  //   };\n  // }, []);\n\n  // console.log(\"word: \", registValue);\n\n  return (\n    <section className={st.regist_container}>\n      <img\n        src={LeftArrow}\n        alt=\"left_arrow\"\n        className={st.arrow}\n        onClick={() => arrowClick()}\n      />\n      <div className={st.form_container}>\n        <div className={st.input_container}>\n          <input\n            type=\"text\"\n            placeholder=\"EN\"\n            value={word.en}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              const inputValue = event.currentTarget.value;\n              setWord((prev: AddToList) => ({\n                ...prev,\n                en: inputValue,\n              }));\n            }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"KO\"\n            value={word.ko}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              const inputValue = event.currentTarget.value;\n              setWord((prev) => ({\n                ...prev,\n                ko: inputValue,\n              }));\n            }}\n            onKeyDown={(e) => {\n              e.key === \"Enter\" && AddToList(word);\n            }}\n          />\n        </div>\n        <button onClick={() => AddToList(word)}>Add</button>\n      </div>\n      <table>\n        <th>\n          {registValue.wordArr &&\n            registValue.wordArr.map((el) => <td>{el.en}</td>)}\n        </th>\n        <tr>\n          {registValue.wordArr &&\n            registValue.wordArr.map((el) => (\n              <td>\n                {el.ko}\n                <img\n                  src={Remove}\n                  alt=\"remove\"\n                  className={st.rm_svg}\n                  onClick={() => rmClick(el.ko)}\n                />\n              </td>\n            ))}\n        </tr>\n      </table>\n      <button className={st.submit_btn} onClick={() => clickNextBtn()}>\n        Next\n      </button>\n    </section>\n  );\n};\n\nexport default RegistWords;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
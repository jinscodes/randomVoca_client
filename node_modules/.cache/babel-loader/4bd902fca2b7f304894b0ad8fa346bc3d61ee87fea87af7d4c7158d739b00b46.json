{"ast":null,"code":"var _jsxFileName = \"/Users/hanjinsung/Desktop/randomVoca_client/src/pages/Regist/RegistWords/RegistWords.tsx\",\n  _s = $RefreshSig$();\nimport LeftArrow from \"assets/svg/Left_arrow.svg\";\nimport Remove from \"assets/svg/Remove.svg\";\nimport { useState } from \"react\";\nimport st from \"./RegistWords.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistWords = ({\n  setPage\n}) => {\n  _s();\n  const [wordArr, setWordArr] = useState([]);\n  const [word, setWord] = useState({\n    en: \"\",\n    ko: \"\"\n  });\n  const arrowClick = () => {\n    setPage(\"regist/title\");\n  };\n  const rmClick = () => {\n    console.log(\"click\");\n  };\n  const AddToList = newObj => {\n    console.log(word);\n    if (word.en !== \"\" && word.ko !== \"\") {\n      wordArr && setWordArr(prev => prev === null || prev === void 0 ? void 0 : prev.concat(newObj));\n      setWord({\n        en: \"\",\n        ko: \"\"\n      });\n    } else {\n      alert(\"There is a empty place\");\n    }\n  };\n\n  // const preventClose = (e: BeforeUnloadEvent) => {\n  //   e.preventDefault();\n  //   e.returnValue = \"\";\n  // };\n\n  // useEffect(() => {\n  //   (() => {\n  //     window.addEventListener(\"beforeunload\", preventClose);\n  //   })();\n  //   return () => {\n  //     window.removeEventListener(\"beforeunload\", preventClose);\n  //   };\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: st.regist_container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: LeftArrow,\n      alt: \"left_arrow\",\n      className: st.arrow,\n      onClick: () => arrowClick()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: st.form_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: st.input_container,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"EN\",\n          value: word.en,\n          onChange: event => {\n            const inputValue = event.currentTarget.value;\n            setWord(prev => ({\n              ...prev,\n              en: inputValue\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"KO\",\n          value: word.ko,\n          onChange: event => {\n            const inputValue = event.currentTarget.value;\n            setWord(prev => ({\n              ...prev,\n              ko: inputValue\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => AddToList(word),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: wordArr.map(el => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: el.en\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: wordArr.map(el => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [el.ko, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Remove,\n            alt: \"remove\",\n            className: st.rm_svg,\n            onClick: () => rmClick()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: st.submit_btn,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistWords, \"s3ImX67JVVtOoQGzjXEkcVpQyxE=\");\n_c = RegistWords;\nexport default RegistWords;\nvar _c;\n$RefreshReg$(_c, \"RegistWords\");","map":{"version":3,"names":["LeftArrow","Remove","useState","st","jsxDEV","_jsxDEV","RegistWords","setPage","_s","wordArr","setWordArr","word","setWord","en","ko","arrowClick","rmClick","console","log","AddToList","newObj","prev","concat","alert","className","regist_container","children","src","alt","arrow","onClick","fileName","_jsxFileName","lineNumber","columnNumber","form_container","input_container","type","placeholder","value","onChange","event","inputValue","currentTarget","map","el","rm_svg","submit_btn","_c","$RefreshReg$"],"sources":["/Users/hanjinsung/Desktop/randomVoca_client/src/pages/Regist/RegistWords/RegistWords.tsx"],"sourcesContent":["import LeftArrow from \"assets/svg/Left_arrow.svg\";\nimport Remove from \"assets/svg/Remove.svg\";\nimport { ChangeEvent, Dispatch, SetStateAction, useState } from \"react\";\n\nimport st from \"./RegistWords.module.scss\";\n\ninterface Props {\n  setPage: Dispatch<SetStateAction<string>>;\n}\n\ninterface AddToList {\n  en: string | undefined;\n  ko: string | undefined;\n}\n\nconst RegistWords = ({ setPage }: Props) => {\n  const [wordArr, setWordArr] = useState<AddToList[]>([]);\n  const [word, setWord] = useState<AddToList>({\n    en: \"\",\n    ko: \"\",\n  });\n\n  const arrowClick = () => {\n    setPage(\"regist/title\");\n  };\n\n  const rmClick = () => {\n    console.log(\"click\");\n  };\n\n  const AddToList = (newObj: AddToList) => {\n    console.log(word);\n\n    if (word.en !== \"\" && word.ko !== \"\") {\n      wordArr && setWordArr((prev) => prev?.concat(newObj));\n      setWord({\n        en: \"\",\n        ko: \"\",\n      });\n    } else {\n      alert(\"There is a empty place\");\n    }\n  };\n\n  // const preventClose = (e: BeforeUnloadEvent) => {\n  //   e.preventDefault();\n  //   e.returnValue = \"\";\n  // };\n\n  // useEffect(() => {\n  //   (() => {\n  //     window.addEventListener(\"beforeunload\", preventClose);\n  //   })();\n  //   return () => {\n  //     window.removeEventListener(\"beforeunload\", preventClose);\n  //   };\n  // }, []);\n\n  return (\n    <section className={st.regist_container}>\n      <img\n        src={LeftArrow}\n        alt=\"left_arrow\"\n        className={st.arrow}\n        onClick={() => arrowClick()}\n      />\n      <div className={st.form_container}>\n        <div className={st.input_container}>\n          <input\n            type=\"text\"\n            placeholder=\"EN\"\n            value={word.en}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              const inputValue = event.currentTarget.value;\n              setWord((prev: AddToList) => ({\n                ...prev,\n                en: inputValue,\n              }));\n            }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"KO\"\n            value={word.ko}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              const inputValue = event.currentTarget.value;\n              setWord((prev) => ({\n                ...prev,\n                ko: inputValue,\n              }));\n            }}\n          />\n        </div>\n        <button onClick={() => AddToList(word)}>Add</button>\n      </div>\n      <table>\n        <th>\n          {wordArr.map((el) => (\n            <td>{el.en}</td>\n          ))}\n        </th>\n        <tr>\n          {wordArr.map((el) => (\n            <td>\n              {el.ko}\n              <img\n                src={Remove}\n                alt=\"remove\"\n                className={st.rm_svg}\n                onClick={() => rmClick()}\n              />\n            </td>\n          ))}\n        </tr>\n      </table>\n      <button className={st.submit_btn}>Next</button>\n    </section>\n  );\n};\n\nexport default RegistWords;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
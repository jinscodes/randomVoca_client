{"ast":null,"code":"var _jsxFileName = \"/Users/hanjinsung/Desktop/randomVoca_client/src/pages/Regist/RegistTitle/RegistTitle.tsx\",\n  _s = $RefreshSig$();\nimport LeftArrow from \"assets/svg/Left_arrow.svg\";\nimport { useState } from \"react\";\nimport st from \"./RegistTitle.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistTitle = ({\n  setPage\n}) => {\n  _s();\n  const [vocabInfo, setVocabInfo] = useState({\n    title: \"\",\n    chapter: \"\"\n  });\n  const clickNextBtn = () => {\n    if (!(vocabInfo !== null && vocabInfo !== void 0 && vocabInfo.title) || !(vocabInfo !== null && vocabInfo !== void 0 && vocabInfo.chapter)) return alert(\"Necessary values are empty\");\n    setPage(\"regist/words\");\n  };\n  const handleChange = (target, key) => {\n    const value = target.currentTarget.value;\n    setVocabInfo(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const arrowClick = () => {\n    window.location.href = \"/\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: st.regist_title_container,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: LeftArrow,\n      alt: \"left_arrow\",\n      className: st.arrow,\n      onClick: () => arrowClick()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Regist Vocab Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Vocab title\",\n        onChange: target => handleChange(target, \"title\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Regist Chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Chapter\",\n        onChange: target => handleChange(target, \"chapter\"),\n        onKeyDown: e => {\n          e.key === \"Enter\" && setPage(\"regist/words\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => clickNextBtn(),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistTitle, \"VGs+PbNsWrPQSNQ4iVoesIXM/Ik=\");\n_c = RegistTitle;\nexport default RegistTitle;\nvar _c;\n$RefreshReg$(_c, \"RegistTitle\");","map":{"version":3,"names":["LeftArrow","useState","st","jsxDEV","_jsxDEV","RegistTitle","setPage","_s","vocabInfo","setVocabInfo","title","chapter","clickNextBtn","alert","handleChange","target","key","value","currentTarget","prev","arrowClick","window","location","href","className","regist_title_container","children","src","alt","arrow","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyDown","e","_c","$RefreshReg$"],"sources":["/Users/hanjinsung/Desktop/randomVoca_client/src/pages/Regist/RegistTitle/RegistTitle.tsx"],"sourcesContent":["import LeftArrow from \"assets/svg/Left_arrow.svg\";\nimport { ChangeEvent, Dispatch, SetStateAction, useState } from \"react\";\nimport { VocabInfo } from \"types/types\";\nimport st from \"./RegistTitle.module.scss\";\n\ninterface Props {\n  setPage: Dispatch<SetStateAction<string>>;\n}\n\nconst RegistTitle = ({ setPage }: Props) => {\n  const [vocabInfo, setVocabInfo] = useState<VocabInfo>({\n    title: \"\",\n    chapter: \"\",\n  });\n\n  const clickNextBtn = () => {\n    if (!vocabInfo?.title || !vocabInfo?.chapter)\n      return alert(\"Necessary values are empty\");\n\n    setPage(\"regist/words\");\n  };\n\n  const handleChange = (target: ChangeEvent<HTMLInputElement>, key: string) => {\n    const value = target.currentTarget.value;\n    setVocabInfo((prev: VocabInfo) => ({\n      ...prev,\n      [key]: value,\n    }));\n  };\n\n  const arrowClick = () => {\n    window.location.href = \"/\";\n  };\n\n  return (\n    <section className={st.regist_title_container}>\n      <img\n        src={LeftArrow}\n        alt=\"left_arrow\"\n        className={st.arrow}\n        onClick={() => arrowClick()}\n      />\n      <div>\n        <p>Regist Vocab Title</p>\n        <input\n          type=\"text\"\n          placeholder=\"Vocab title\"\n          onChange={(target) => handleChange(target, \"title\")}\n        />\n      </div>\n      <div>\n        <p>Regist Chapter</p>\n        <input\n          type=\"text\"\n          placeholder=\"Chapter\"\n          onChange={(target) => handleChange(target, \"chapter\")}\n          onKeyDown={(e) => {\n            e.key === \"Enter\" && setPage(\"regist/words\");\n          }}\n        />\n      </div>\n      <button onClick={() => clickNextBtn()}>Next</button>\n    </section>\n  );\n};\n\nexport default RegistTitle;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,SAAgDC,QAAQ,QAAQ,OAAO;AAEvE,OAAOC,EAAE,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM3C,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAY;IACpDS,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,EAACJ,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEE,KAAK,KAAI,EAACF,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEG,OAAO,GAC1C,OAAOE,KAAK,CAAC,4BAA4B,CAAC;IAE5CP,OAAO,CAAC,cAAc,CAAC;EACzB,CAAC;EAED,MAAMQ,YAAY,GAAGA,CAACC,MAAqC,EAAEC,GAAW,KAAK;IAC3E,MAAMC,KAAK,GAAGF,MAAM,CAACG,aAAa,CAACD,KAAK;IACxCR,YAAY,CAAEU,IAAe,KAAM;MACjC,GAAGA,IAAI;MACP,CAACH,GAAG,GAAGC;IACT,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC5B,CAAC;EAED,oBACEnB,OAAA;IAASoB,SAAS,EAAEtB,EAAE,CAACuB,sBAAuB;IAAAC,QAAA,gBAC5CtB,OAAA;MACEuB,GAAG,EAAE3B,SAAU;MACf4B,GAAG,EAAC,YAAY;MAChBJ,SAAS,EAAEtB,EAAE,CAAC2B,KAAM;MACpBC,OAAO,EAAEA,CAAA,KAAMV,UAAU,CAAC;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACF9B,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,EAAG;MAAkB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzB9B,OAAA;QACE+B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBC,QAAQ,EAAGtB,MAAM,IAAKD,YAAY,CAACC,MAAM,EAAE,OAAO;MAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9B,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,EAAG;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACrB9B,OAAA;QACE+B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,SAAS;QACrBC,QAAQ,EAAGtB,MAAM,IAAKD,YAAY,CAACC,MAAM,EAAE,SAAS,CAAE;QACtDuB,SAAS,EAAGC,CAAC,IAAK;UAChBA,CAAC,CAACvB,GAAG,KAAK,OAAO,IAAIV,OAAO,CAAC,cAAc,CAAC;QAC9C;MAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9B,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAAC,CAAE;MAAAc,QAAA,EAAC;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd,CAAC;AAAC3B,EAAA,CAvDIF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAyDjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}